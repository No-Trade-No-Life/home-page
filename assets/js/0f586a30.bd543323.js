"use strict";(self.webpackChunk_yuants_docs=self.webpackChunk_yuants_docs||[]).push([[3754],{5849:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var i=t(9541),n=t(4317);const o={},a="Providing Historical Order Data",s={id:"vendor-guide/vendor-historical-order",title:"Providing Historical Order Data",description:"An order can be summarized as a query for a specific account within a specific time range, and it is also a problem of sequential data collection. Similar to historical market data, suppliers need to provide historical order data.",source:"@site/docs/vendor-guide/vendor-historical-order.md",sourceDirName:"vendor-guide",slug:"/vendor-guide/vendor-historical-order",permalink:"/docs/vendor-guide/vendor-historical-order",draft:!1,unlisted:!1,editUrl:"https://github.com/No-Trade-No-Life/Yuan/tree/main/ui/docs/docs/vendor-guide/vendor-historical-order.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Providing Historical Market Data",permalink:"/docs/vendor-guide/vendor-historical-market-data"},next:{title:"Providing Product Specifications",permalink:"/docs/vendor-guide/vendor-product"}},d={},c=[];function l(e){const r={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h1,{id:"providing-historical-order-data",children:"Providing Historical Order Data"}),"\n",(0,i.jsxs)(r.p,{children:["An ",(0,i.jsx)(r.a,{href:"../basics/what-is-order",children:"order"})," can be summarized as a query for a specific account within a specific time range, and it is also a problem of sequential data collection. Similar to historical market data, suppliers need to provide historical order data."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-ts",children:"import { Terminal, provideSeriesData } from '@yuants/protocol';\n\nconst terminal = new Terminal(process.env.HOST_URL!, {});\n\nprovideDataSeries(\n  terminal,\n  {\n    // Type of the data series\n    type: 'order',\n    // Regular expression for the data series, matching Series IDs will be passed to the callback function\n    pattern: `^${ACCOUNT_ID}/`,\n  },\n  async (_, [from, to]) => {\n    // No need to parse any information from the Series ID\n    // Fetch historical order data from an external system (to be implemented by the user)\n    const res = await Api.getHistoryOrders(from, to);\n    // Convert to Yuan's order data format\n    return res.map((x) => ({\n      account_id: ACCOUNT_ID,\n      // ... other fields\n    }));\n  },\n);\n"})}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["The provider supplies historical order data for all orders with the prefix ",(0,i.jsx)(r.code,{children:"ACCOUNT_ID"}),"."]}),"\n",(0,i.jsx)(r.li,{children:"When there is no data within the given time range, an empty array is returned."}),"\n",(0,i.jsx)(r.li,{children:"If the API returns data outside the given time range, Yuan will automatically filter out the out-of-range data. The provider does not need to handle this."}),"\n",(0,i.jsxs)(r.li,{children:["The given time range is a left-closed, right-open interval, i.e., ",(0,i.jsx)(r.code,{children:"[from, to)"}),", with the timestamp unit being milliseconds."]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,n.a)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},4317:(e,r,t)=>{t.d(r,{Z:()=>s,a:()=>a});var i=t(3981);const n={},o=i.createContext(n);function a(e){const r=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(o.Provider,{value:r},e.children)}}}]);