"use strict";(self.webpackChunk_yuants_docs=self.webpackChunk_yuants_docs||[]).push([[5956],{6907:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>_,frontMatter:()=>c,metadata:()=>o,toc:()=>i});var t=r(9541),s=r(4317);const c={},a="\u63d0\u4f9b\u8f6c\u8d26\u63a5\u53e3",o={id:"vendor-guide/vendor-transfer",title:"\u63d0\u4f9b\u8f6c\u8d26\u63a5\u53e3",description:"\u60a8\u53ef\u80fd\u9700\u8981\u9605\u8bfb \u57fa\u7840\u6982\u5ff5 / \u8f6c\u8d26 \u6765\u6df1\u5165\u7406\u89e3 Yuan \u4e2d\u8f6c\u8d26\u7684\u57fa\u672c\u6982\u5ff5\u3002",source:"@site/i18n/zh-Hans/docusaurus-plugin-content-docs/current/vendor-guide/vendor-transfer.md",sourceDirName:"vendor-guide",slug:"/vendor-guide/vendor-transfer",permalink:"/zh-Hans/docs/vendor-guide/vendor-transfer",draft:!1,unlisted:!1,editUrl:"https://github.com/No-Trade-No-Life/Yuan/tree/main/ui/docs/docs/vendor-guide/vendor-transfer.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"\u63d0\u4f9b\u4ea4\u6613\u63a5\u53e3",permalink:"/zh-Hans/docs/vendor-guide/vendor-trading-interfaces"},next:{title:"Protocol",permalink:"/zh-Hans/docs/category/protocol"}},d={},i=[];function u(n){const e={a:"a",admonition:"admonition",code:"code",h1:"h1",p:"p",pre:"pre",...(0,s.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"\u63d0\u4f9b\u8f6c\u8d26\u63a5\u53e3",children:"\u63d0\u4f9b\u8f6c\u8d26\u63a5\u53e3"}),"\n",(0,t.jsx)(e.admonition,{type:"info",children:(0,t.jsxs)(e.p,{children:["\u60a8\u53ef\u80fd\u9700\u8981\u9605\u8bfb ",(0,t.jsx)(e.a,{href:"/zh-Hans/docs/basics/what-is-transfer-order",children:"\u57fa\u7840\u6982\u5ff5 / \u8f6c\u8d26"})," \u6765\u6df1\u5165\u7406\u89e3 Yuan \u4e2d\u8f6c\u8d26\u7684\u57fa\u672c\u6982\u5ff5\u3002"]})}),"\n",(0,t.jsx)(e.p,{children:"\u4f9b\u5e94\u5546\u8d1f\u8d23\u5b9e\u73b0\u8f6c\u8d26\u63a5\u53e3\uff0c\u7528\u4e8e\u8d26\u6237\u4e4b\u95f4\u7684\u8f6c\u8d26\u64cd\u4f5c\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u5b9e\u73b0\u8f6c\u8d26\u63a5\u53e3\u975e\u5e38\u7b80\u5355\uff0c\u53ea\u8981\u4f7f\u7528 ",(0,t.jsx)(e.code,{children:"addAccountTransferAddress"})," \u65b9\u6cd5\u6ce8\u518c\u8d26\u6237\u5bf9\u5e94\u7684\u8f6c\u8d26\u4ee5\u53ca\u67e5\u8d26\u51fd\u6570\u5373\u53ef\u3002"]}),"\n",(0,t.jsxs)(e.p,{children:["\u5177\u4f53\u6765\u8bf4\uff0c\u8f6c\u8d26\u8def\u7531\u662f\u7531 (",(0,t.jsx)(e.code,{children:"\u8d26\u6237 ID"}),", ",(0,t.jsx)(e.code,{children:"\u8f6c\u8d26\u7f51\u7edc ID"}),", ",(0,t.jsx)(e.code,{children:"\u8d27\u5e01"}),", ",(0,t.jsx)(e.code,{children:"\u5730\u5740"}),") \u56db\u5143\u7ec4\u4f5c\u4e3a\u6765\u552f\u4e00\u786e\u5b9a\u7684\uff0c\u5373",(0,t.jsx)(e.a,{href:"/zh-Hans/docs/basics/what-is-transfer-order#%E8%B4%A6%E6%88%B7%E5%9C%B0%E5%9D%80%E4%BF%A1%E6%81%AF",children:"\u8d26\u6237\u5730\u5740\u4fe1\u606f"}),"\u3002"]}),"\n",(0,t.jsxs)(e.p,{children:["\u540c\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684 vendor \u5b9e\u4f8b\u53ef\u80fd\u63d0\u4f9b\u591a\u4e2a\u8f6c\u8d26\u3001\u67e5\u8d26\u7684\u65b9\u5f0f\u3002\u5047\u8bbe\u4f60\u8981\u5b9e\u73b0\u4e00\u4e2a\u63d0\u4f9b\u4e24\u7ec4\u7684\u4f9b\u5e94\u5546\uff0c\u5206\u522b\u662f (",(0,t.jsx)(e.code,{children:"account_id_1"}),", ",(0,t.jsx)(e.code,{children:"USDT"}),", ",(0,t.jsx)(e.code,{children:"AccountInternal/1/SubAccount/1"}),", ",(0,t.jsx)(e.code,{children:"main"}),") \u548c (",(0,t.jsx)(e.code,{children:"account_id_2"}),", ",(0,t.jsx)(e.code,{children:"USDT"}),", ",(0,t.jsx)(e.code,{children:"TRC20"}),", ",(0,t.jsx)(e.code,{children:"0x1234567890"}),")\uff0c\u90a3\u4e48\u4f60\u53ef\u4ee5\u8fd9\u6837\u5b9e\u73b0\uff1a"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"import { ITerminal, addAccountTransferAddress } from '@yuants/protocol';\nimport { ITransferOrder } from '@yuants/transfer';\n\nconst terminal = new ITerminal(process.env.HOST_URL!, {});\n\naddAccountTransferAddress({\n  terminal,\n  account_id: 'account_id_1', // \u8d26\u6237 ID\n  currency: 'USDT', // \u8d27\u5e01\n  network_id: 'AccountInternal/1/SubAccount/1', // \u8f6c\u8d26\u7f51\u7edc ID\uff0c\u8fd9\u91cc\u6211\u4eec\u5728\u63cf\u8ff0\u4e00\u4e2a\u4e3b\u8d26\u6237-\u5b50\u8d26\u6237\u7684\u8f6c\u8d26\u3002\n  address: 'main', // \u5730\u5740\uff0c\u5bf9\u4e8e AccountInternal/1/SubAccount/1 \u6765\u8bf4\uff0c\u8fd9\u91cc\u53ef\u4ee5\u662f main \u6216\u8005\u662f\u4e3b\u8d26\u6237 ID\uff0c\u53ea\u8981\u4e0e\u5b50\u8d26\u6237\u7684\u5730\u5740\u533a\u5206\u5f00\u5373\u53ef\n  onApply: {\n    INIT: async (order: ITransferOrder) => {\n      /// NOTE: makeSubAccountParams \u548c Api.transferSubAccount \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n      const params = makeSubAccountParams(order);\n      const transferResult = await Api.transferSubAccount(params);\n      if (!transferResult.success) {\n        /// NOTE: \u6240\u6709\u975e COMPLETE/ERROR \u7684\u72b6\u6001\u90fd\u4f1a\u88ab\u8f6c\u8d26\u63a7\u5236\u5668\u53d1\u56de\u7ed9\u5f53\u524d\u6b65\u9aa4\u7684\u6267\u884c\u65b9\uff0c\u6bd4\u5982\u8fd9\u91cc\u8fd4\u56de INIT\uff0c\u8f6c\u8d26\u63a7\u5236\u5668\u4f1a\u5c06\u8f6c\u8d26\u8ba2\u5355\u7684\u72b6\u6001\u8bbe\u7f6e\u4e3a INIT \u5e76\u91cd\u65b0\u53d1\u7ed9\u5f53\u524d vendor \u7684\u8fd9\u4e00\u6b65\u6765\u6267\u884c\uff0c\u76f4\u5230\u6210\u529f\u6216\u8005\u8f6c\u8d26\u8d85\u65f6\u3002\n        return { state: 'INIT', message: transferResult.message };\n      }\n      return { state: 'COMPLETE' };\n    },\n  },\n  /// NOTE: \u5bf9\u4e8e\u8fd9\u7c7b\u8f6c\u8d26\u6211\u4eec\u8ba4\u4e3a\u4f1a\u7acb\u5373\u5b8c\u6210\uff0c\u6240\u4ee5\u8fd9\u91cc\u76f4\u63a5\u8fd4\u56de COMPLETE\n  onEval: async (order: ITransferOrder) => {\n    return { state: 'COMPLETE' };\n  },\n});\n\naddAccountTransferAddress({\n  terminal,\n  account_id: 'account_id_2',\n  currency: 'USDT',\n  network_id: 'TRC20', // \u8fd9\u91cc\u63cf\u8ff0\u4e86\u4e00\u4e2a TRC20 \u8f6c\u8d26\n  address: '0x123456789', // \u6b64\u5904\u5fc5\u987b\u7ed9\u5b9a\u8d26\u6237\u7684 TRC20 \u5730\u5740\n  onApply: {\n    INIT: async (order: ITransferOrder) => {\n      /// NOTE: makeTRC20Params \u548c Api.transferTRC20 \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n      const params = makeCheckTRC20Params(order);\n      const transferResult = await Api.transferTRC20(params);\n      if (!transferResult.success) {\n        return { state: 'INIT', message: transferResult.message };\n      }\n      const withdrawId = transferResult.withdrawId;\n      /// NOTE: \u6709\u65f6\u5019\u8f6c\u8d26\u65e0\u6cd5\u7acb\u5373\u5b8c\u6210\uff0c\u6bd4\u5982 TRC20 \u8f6c\u8d26\u9700\u8981\u7b49\u5f85\u94fe\u4e0a\u786e\u8ba4\uff0c\n      ///   \u76f4\u5230\u62ff\u5230\u94fe\u4e0a Transaction ID \u4e3a\u6b62\uff0c\u6211\u4eec\u624d\u8ba4\u4e3a\u8f6c\u8d26\u6b65\u9aa4\u7ed3\u675f\u4e86\uff0c\n      ///   \u8fd9\u65f6\u5019\u9700\u8981\u8ba9\u5f53\u524d\u8f6c\u8d26\u6b65\u9aa4\u8fdb\u5165\u4e00\u4e2a\u65b0\u7684\u72b6\u6001\uff08\u4efb\u610f\u540d\u5b57\uff0c\u8fd9\u91cc\u6211\u4eec\u53d6\u540d AWAIT_TX_ID\uff09\u5e76\u4e14\u8fd4\u56de\u4e00\u4e2a\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\n      ///   \u4e4b\u540e\u8f6c\u8d26\u63a7\u5236\u5668\u4f1a\u5c06\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u4fe1\u606f\u4fdd\u5b58\u5728\u8f6c\u8d26\u8ba2\u5355\u7684 current_tx_context \u5b57\u6bb5\u4e2d\uff0c\u7136\u540e\u518d\u6b21\u53d1\u7ed9\u5f53\u524d vendor \u7684\u5bf9\u5e94\u6b65\u9aa4\u6765\u6267\u884c\u3002\n      return { state: 'AWAIT_TX_ID', context: withdrawId };\n    },\n    AWAIT_TX_ID: async (order: ITransferOrder) => {\n      const withdrawId = order.current_tx_context;\n      /// NOTE: Api.getWithdrawHistory \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n      const withdrawHistoryResult = await Api.getWithdrawHistory(withdrawId);\n      const transaction_id = withdrawHistoryResult?.transactionId;\n      if (!transaction_id) {\n        return { state: 'AWAIT_TX_ID', context: withdrawId };\n      }\n      return { state: 'COMPLETE', transaction_id };\n    },\n  },\n  onEval: async (order: ITransferOrder) => {\n    /// NOTE: makeCheckTRC20Params \u548c Api.checkTRC20 \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n    const params = makeCheckTRC20Params(order);\n    const checkResult = await Api.checkTRC20(params);\n    if (!checkResult.success) {\n      return { state: 'INIT', message: checkResult.message };\n    }\n    const received_amount = checkResult.receivedAmount;\n    return { state: 'COMPLETE', received_amount };\n  },\n});\n"})}),"\n",(0,t.jsxs)(e.p,{children:["\u4e0a\u9762\u7684\u4f8b\u5b50\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u8f6c\u8d26\u63a5\u53e3\u5b9e\u73b0\uff0c\u771f\u5b9e\u4e16\u754c\u4e2d\u7684\u4f8b\u5b50\u8bf7\u89c1\uff1a",(0,t.jsx)(e.a,{href:"https://github.com/No-Trade-No-Life/Yuan/blob/4dc37b9c30292a2fd87a311cca3d06f9e53e4f2d/apps/vendor-okx/src/index.ts#L521",children:"OKX Transfer"}),"\u3002"]}),"\n",(0,t.jsx)(e.h1,{id:"\u9644\u5f55\u8f6c\u8d26\u63a5\u53e3\u7684\u5e95\u5c42\u5b9e\u73b0",children:"\u9644\u5f55\uff1a\u8f6c\u8d26\u63a5\u53e3\u7684\u5e95\u5c42\u5b9e\u73b0"}),"\n",(0,t.jsxs)(e.admonition,{title:"\u6216\u8bb8\u60a8\u4e0d\u9700\u8981\u9605\u8bfb\u4e00\u8282",type:"info",children:[(0,t.jsxs)(e.p,{children:["\u4e0b\u9762\u7684\u4f8b\u5b50\u4ec5\u4ec5\u7528\u6765\u6f14\u793a ",(0,t.jsx)(e.code,{children:"addAccountTransferAddress"})," \u65b9\u6cd5\u7684\u80cc\u540e\uff0c\u8f6c\u8d26\u63a5\u53e3\u5b9e\u9645\u7684\u6837\u5b50\u662f\u4ec0\u4e48\u6837\u7684\u3002"]}),(0,t.jsx)(e.p,{children:"\u60a8\u53ef\u80fd\u4e0d\u9700\u8981\u9605\u8bfb\u8fd9\u4e00\u8282\uff0c\u9664\u975e\u60a8\u9700\u8981\u6df1\u5165\u4e86\u89e3 Yuan \u4e2d\u8f6c\u8d26\u7684\u5e95\u5c42\u5b9e\u73b0\u3002"})]}),"\n",(0,t.jsxs)(e.p,{children:["\u8f6c\u8d26\u63a5\u53e3\u901a\u8fc7 Yuan \u7684 ",(0,t.jsx)(e.a,{href:"/zh-Hans/docs/protocol/message-pattern-layer#%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%A8%A1%E5%BC%8F",children:"\u5ba2\u6237\u7aef/\u670d\u52a1\u5668\u6a21\u5f0f"})," \u5b9a\u4e49\uff0c\u7531\u4e24\u4e2a API \u7ec4\u6210\uff0c\u5206\u522b\u662f\u8f6c\u8d26\u8bf7\u6c42\u548c\u8f6c\u8d26\u67e5\u8be2\u3002"]}),"\n",(0,t.jsx)(e.p,{children:"\u4f9b\u5e94\u5546\u9700\u8981\u6839\u636e\u8f6c\u8d26\u8ba2\u5355\u4e2d\u7684\u6267\u884c\u5b57\u6bb5\uff0c\u6765\u5b9e\u73b0\u5f53\u524d\u8f6c\u8d26\u6b65\u9aa4\u7684\u8f6c\u8d26\u8bf7\u6c42\u548c\u8f6c\u8d26\u67e5\u8be2\u3002"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"interface IService {\n  // \u53d1\u8d77\u8f6c\u8d26\n  TransferApply: {\n    req: ITransferOrder;\n    res: IResponse<{ state: string; context?: string; transaction_id?: string; message?: string }>;\n    frame: void;\n  };\n  // \u6838\u9a8c\u8f6c\u8d26 (\u5bf9\u8d26)\n  TransferEval: {\n    req: ITransferOrder;\n    res: IResponse<{ state: string; context?: string; received_amount?: number } | void>;\n    frame: void;\n  };\n}\n"})}),"\n",(0,t.jsx)(e.p,{children:"\u800c vendor \u7684\u7ef4\u62a4\u8005\u9700\u8981\u5728 Terminal \u4e2d\u6ce8\u518c\u8fd9\u4e24\u4e2a API \u7684\u5b9e\u73b0\u3002"}),"\n",(0,t.jsxs)(e.p,{children:["\u5982\u540c ",(0,t.jsx)(e.a,{href:"/zh-Hans/docs/vendor-guide/vendor-transfer#%E6%8F%90%E4%BE%9B%E8%BD%AC%E8%B4%A6%E6%8E%A5%E5%8F%A3",children:"\u6307\u5357"})," \u4e2d\u7684\u4f8b\u5b50\uff0c\u4e00\u4e2a vendor \u53ef\u80fd\u9700\u8981\u63d0\u4f9b\u591a\u4e2a\u8d26\u6237\u5730\u5740\u4fe1\u606f\u7684\u8f6c\u8d26\u63a5\u53e3\uff0c\u56e0\u6b64\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u8f6c\u8d26\u8ba2\u5355\u4e2d\u7684\u6267\u884c\u5b57\u6bb5\u6765\u5224\u65ad\u5f53\u524d\u8f6c\u8d26\u8be5\u8d70\u5411\u54ea\u4e2a\u903b\u8f91\u5206\u652f\u3002"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-ts",children:"import { ITerminal } from '@yuants/protocol';\n\nconst terminal = new ITerminal(process.env.HOST_URL!, {});\n\nconst contextList = {\n  {\n    account_id: 'account_id_1',\n    currency: 'USDT',\n    network_id: 'AccountInternal/1/SubAccount/1',\n    address: 'main',\n  },\n  {\n    account_id: 'account_id_2',\n    currency: 'USDT',\n    network_id: 'TRC20',\n    address: '0x1234567890',\n  },\n};\n\nterminal.server.provideService(\n  'TransferApply',\n  {\n    type: 'object',\n    required: ['current_tx_account_id', 'currency', 'current_network_id', 'current_tx_address'],\n    oneOf: contextList.map((x) => ({\n      properties: {\n        current_tx_account_id: {\n          const: x.account_id,\n        },\n        currency: {\n          const: x.currency,\n        },\n        current_network_id: {\n          const: x.network_id,\n        },\n        current_tx_address: {\n          const: x.address,\n        },\n      },\n    })),\n  },\n  async (req) => {\n    const { current_tx_account_id, currency, current_network_id, current_tx_address, current_tx_state } = req;\n    if (current_tx_account_id === 'account_id_1' && currency === 'USDT' && current_network_id === 'AccountInternal/1/SubAccount/1' && current_tx_address === 'main') {\n      if (current_tx_state === 'INIT') {\n        /// NOTE: makeSubAccountParams \u548c Api.transferSubAccount \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n        const params = makeSubAccountParams(order);\n        const transferResult = await Api.transferSubAccount(params);\n        if (!transferResult.success) {\n          return { state: 'INIT', message: transferResult.message };\n        }\n        return { state: 'COMPLETE' };\n      }\n      return { res: { code: 400, message: 'Unknown State', data: { state: 'ERROR' } } };\n    } else if (current_tx_account_id === 'account_id_2' && currency === 'USDT' && current_network_id === 'TRC20' && current_tx_address === '0x1234567890') {\n        if (current_tx_state === 'INIT') {\n          /// NOTE: makeTRC20Params \u548c Api.transferTRC20 \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n          const params = makeTRC20Params(order);\n          const transferResult = await Api.transferTRC20(params);\n          if (!transferResult.success) {\n            return { state: 'INIT', message: transferResult.message };\n          }\n          const withdrawId = transferResult.withdrawId;\n          return { state: 'AWAIT_TX_ID', context: withdrawId };\n        }\n        if (current_tx_state === 'AWAIT_TX_ID') {\n          const withdrawId = order.current_tx_context;\n          const withdrawHistoryResult = await Api.getWithdrawHistory(withdrawId);\n          const transactionId = withdrawHistoryResult?.transactionId;\n          if (!transactionId) {\n              return { state: 'AWAIT_TX_ID', context: withdrawId };\n          }\n          return { state: 'COMPLETE', transaction_id: transactionId };\n        }\n      return { res: { code: 400, message: 'Unknown State', data: { state: 'ERROR' } } };\n    }\n    return { state: 'COMPLETE' };\n  },\n);\n\nterminal.server.provideService(\n  'TransferEval',\n  {\n    type: 'object',\n    required: ['current_rx_account_id', 'currency', 'current_network_id', 'current_rx_address'],\n    oneOf: contextList.map((x) => ({\n      properties: {\n        current_rx_account_id: {\n          const: x.account_id,\n        },\n        currency: {\n          const: x.currency,\n        },\n        current_network_id: {\n          const: x.network_id,\n        },\n        current_rx_address: {\n          const: x.address,\n        },\n      },\n    })),\n  },\n  async (req) => {\n    const { current_rx_account_id, currency, current_network_id, current_rx_address, current_rx_state } = req;\n    if (current_rx_account_id === '1' && currency === 'USDT' && current_network_id === 'AccountInternal/1/SubAccount/1' && current_rx_address === 'main') {\n      return { state: 'COMPLETE' };\n    }\n    if (current_rx_account_id === '2' && currency === 'USDT' && current_network_id === 'TRC20' && current_rx_address === '0x1234567890') {\n      /// NOTE: makeCheckTRC20Params \u548c Api.checkTRC20 \u9700\u8981\u81ea\u884c\u5b9e\u73b0\n      const params = makeCheckTRC20Params(order);\n      const checkResult = await Api.checkTRC20(params);\n      if (!checkResult.success) {\n        return { state: 'INIT', message: checkResult.message };\n      }\n      const received_amount = checkResult.receivedAmount;\n      return { state: 'COMPLETE', received_amount };\n    }\n    return { state: 'COMPLETE' };\n  },\n);\n\n"})})]})}function _(n={}){const{wrapper:e}={...(0,s.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(u,{...n})}):u(n)}},4317:(n,e,r)=>{r.d(e,{Z:()=>o,a:()=>a});var t=r(3981);const s={},c=t.createContext(s);function a(n){const e=t.useContext(c);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function o(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:a(n.components),t.createElement(c.Provider,{value:e},n.children)}}}]);