"use strict";(self.webpackChunk_yuants_docs=self.webpackChunk_yuants_docs||[]).push([[42],{158:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(6393);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=o,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(h,l(l({ref:t},c),{},{components:n})):a.createElement(h,l({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=m;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4443:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>s});var a=n(5296),o=(n(6393),n(158));const r={sidebar_position:2},l="Using Hooks",i={unversionedId:"agent-guide/using-hooks",id:"agent-guide/using-hooks",title:"Using Hooks",description:'"Hooks", or called "Composable Functions", are the building blocks of Agent.',source:"@site/docs/agent-guide/using-hooks.md",sourceDirName:"agent-guide",slug:"/agent-guide/using-hooks",permalink:"/zh-Hans/docs/agent-guide/using-hooks",draft:!1,editUrl:"https://github.com/No-Trade-No-Life/Yuan/tree/main/ui/docs/docs/agent-guide/using-hooks.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docsSidebar",previous:{title:"What is Agent",permalink:"/zh-Hans/docs/agent-guide/what-is-agent"},next:{title:"Using Position Manager",permalink:"/zh-Hans/docs/agent-guide/using-position-manager"}},u={},s=[{value:"Basic Hooks",id:"basic-hooks",level:2},{value:"useRef",id:"useref",level:3},{value:"useEffect",id:"useeffect",level:3},{value:"useState",id:"usestate",level:3},{value:"useMemo",id:"usememo",level:3},{value:"useSeries",id:"useseries",level:3},{value:"Caveats",id:"caveats",level:3},{value:"Data Hooks",id:"data-hooks",level:2},{value:"useOHLC",id:"useohlc",level:3},{value:"useProduct",id:"useproduct",level:3},{value:"useAccountInfo",id:"useaccountinfo",level:3},{value:"useExchange",id:"useexchange",level:3},{value:"Custom Parameters",id:"custom-parameters",level:2},{value:"useParamString",id:"useparamstring",level:3},{value:"useParamNumber",id:"useparamnumber",level:3},{value:"useParamBoolean",id:"useparamboolean",level:3},{value:"Custom Hooks",id:"custom-hooks",level:2},{value:"Further Reading",id:"further-reading",level:2}],c={toc:s},p="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"using-hooks"},"Using Hooks"),(0,o.kt)("p",null,'"',(0,o.kt)("strong",{parentName:"p"},"Hooks"),'", or called "',(0,o.kt)("strong",{parentName:"p"},"Composable Functions"),'", are the building blocks of Agent.'),(0,o.kt)("p",null,"It's inspired by React Hooks, but it's not the all same because agent scene is simpler."),(0,o.kt)("p",null,"Thinking in composable functions, you can build a robust strategy easily."),(0,o.kt)("h2",{id:"basic-hooks"},"Basic Hooks"),(0,o.kt)("h3",{id:"useref"},"useRef"),(0,o.kt)("p",null,"The agent is a stateless function, so it cannot store data in the function body."),(0,o.kt)("p",null,"For example, if you want to create a counter, you may use global variable like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"let i = 0;\n// So every time the agent is executed, counter will increase by 1.\nexport default () => {\n  i++;\n};\n")),(0,o.kt)("p",null,"Using global variable has some trouble when you reuse code."),(0,o.kt)("p",null,"So we ",(0,o.kt)("strong",{parentName:"p"},"recommend")," you to use ",(0,o.kt)("inlineCode",{parentName:"p"},"useRef")," to handle this problem."),(0,o.kt)("p",null,"The fundamental hook is ",(0,o.kt)("inlineCode",{parentName:"p"},"useRef"),", which is used to store the data that will be used in the future."),(0,o.kt)("p",null,"For example, if you want to create a counter, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useRef")," to store the counter value."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const ref = useRef(0);\n  // count up from 0, and increase by 1 every time the agent is called\n  ref.current++;\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useRef")," can be called multiple times, and each call will create a new ref."),(0,o.kt)("li",{parentName:"ul"},"Don't place the hook in a conditional statement or loop, it should be placed at the top level of the function body. ",(0,o.kt)("strong",{parentName:"li"},"So as all the hooks."))),(0,o.kt)("h3",{id:"useeffect"},"useEffect"),(0,o.kt)("p",null,"When you want to do some side-effects, you can use ",(0,o.kt)("inlineCode",{parentName:"p"},"useEffect"),"."),(0,o.kt)("p",null,"For example, you want to increase the counter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const ref = useRef(0);\n  useEffect(() => {\n    ref.current++;\n  });\n};\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useEffect")," has a second parameter, which is an array of dependencies.\nBefore the effect executed, the dependencies will be compared with the previous dependencies.\nIf the dependencies are different, the effect will be ",(0,o.kt)("strong",{parentName:"p"},"immediately")," executed."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"If the dependencies are not provided, the effect will be executed every time the agent is called."),(0,o.kt)("li",{parentName:"ul"},"If the dependencies are provided, the effect will be executed when the dependencies are different."),(0,o.kt)("li",{parentName:"ul"},"If the dependencies are an empty array, the effect will be executed only once."),(0,o.kt)("li",{parentName:"ul"},"Note that the dependencies are compared by reference, not by value. So you should care if your array item is JS object.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const ref = useRef(0);\n  // only executed once, usually used to initialize the data\n  useEffect(() => {\n    ref.current++;\n  }, []);\n};\n")),(0,o.kt)("p",null,"For example, you want to do effect if new OHLC data is received."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const ref = useRef(0);\n  const { close } = useParamOHLC();\n  // executed when the length of close is changed\n  useEffect(() => {\n    ref.current++;\n  }, [close.length]);\n};\n")),(0,o.kt)("p",null,"You can also set up a cleanup logic in the first parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const ref = useRef(0);\n  const { close } = useParamOHLC();\n  // executed when the length of close is changed\n  useEffect(() => {\n    ref.current++;\n    return () => {\n      // cleanup logic, execute before the next effect\n      ref.current--;\n    };\n  }, [close.length]);\n  // so that the counter will not increase infinitely\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Cleanup function will be executed before the next effect."),(0,o.kt)("li",{parentName:"ul"},"When the agent is stopping, the cleanup function will be executed."),(0,o.kt)("li",{parentName:"ul"},"It's useful when you want to do some cleanup logic, such as canceling a order.")),(0,o.kt)("h3",{id:"usestate"},"useState"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useState")," is used to store the state of the agent."),(0,o.kt)("p",null,"Different from ",(0,o.kt)("inlineCode",{parentName:"p"},"useRef"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"useState")," will cause the agent to be re-executed when the state is changed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const [count, setCount] = useState(0);\n  // count up from 0, and increase by 1 every time the agent is called\n  // CAUTION: the following code will cause infinite loop\n  setCount(count + 1); // it will cause the agent to be re-executed and call setCount again\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useState")," returns a tuple, the first item is the state, the second item is the function to change the state.")),(0,o.kt)("h3",{id:"usememo"},"useMemo"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useMemo")," is used to cache the result of a function. Usually used in expensive computation or cache an object reference."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"useMemo")," required a second parameter, which is an array of dependencies."),(0,o.kt)("li",{parentName:"ul"},"The first parameter is a function, which will be executed when the dependencies are changed."),(0,o.kt)("li",{parentName:"ul"},"The return value of first parameter will be treated as the return value of ",(0,o.kt)("inlineCode",{parentName:"li"},"useMemo"),".")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const [count, setCount] = useState(0);\n  const array = useMemo(() => {\n    // Expensive computation. Recompute only if count changes\n    const array = [];\n    for (let i = 0; i < count; i++) {\n      array.push(i);\n    }\n    return array;\n  }, [count]);\n  // Print only if the count (array) changed\n  useEffect(() => {\n    console.log(array);\n  }, [array]);\n};\n")),(0,o.kt)("h3",{id:"useseries"},"useSeries"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useSeries")," is used to create a Series."),(0,o.kt)("p",null,"Series is an array that can be used to store time series data."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Recommend to store technical indicators in Series.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const series = useSeries();\n  useEffect(() => {\n    series.push(Math.random());\n  });\n};\n")),(0,o.kt)("p",null,"You can also specify the options to initialize the Series."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const series = useSeries('series-name', close, { display: 'line', chart: 'new' });\n  useEffect(() => {\n    series.push(Math.random());\n  });\n};\n")),(0,o.kt)("h3",{id:"caveats"},"Caveats"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The agent is a stateless function, so you should not use ",(0,o.kt)("inlineCode",{parentName:"li"},"var")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"let")," to declare variables."),(0,o.kt)("li",{parentName:"ul"},"Don't place the hook in a conditional statement or loop, it should be placed at the top level of the function body."),(0,o.kt)("li",{parentName:"ul"},"Rules may cause infinite re-execution if they are conflict with each other. You should avoid it.")),(0,o.kt)("h2",{id:"data-hooks"},"Data Hooks"),(0,o.kt)("h3",{id:"useohlc"},"useOHLC"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useOHLC")," is used to get the OHLC(+V) data."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The first parameter is the datasource_id."),(0,o.kt)("li",{parentName:"ul"},"The second parameter is the product_id."),(0,o.kt)("li",{parentName:"ul"},"The third parameter is the period in seconds. (60 = 1min, 300 = 5min, 900 = 15min, 3600 = 1hour, 86400 = 1day, ...)")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const { time, open, high, low, close, volume } = useOHLC('Y', 'XAUUSD', 300);\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"time"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"open"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"high"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"low"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"close"),", ",(0,o.kt)("inlineCode",{parentName:"li"},"volume")," are all Series."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"time")," is the series of timestamp epoch in milliseconds.")),(0,o.kt)("h3",{id:"useproduct"},"useProduct"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useProduct")," is used to get the ",(0,o.kt)("a",{parentName:"p",href:"../basics/what-is-product"},"product")," information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const product = useProduct('Y', 'XAUUSD');\n  // ...\n};\n")),(0,o.kt)("h3",{id:"useaccountinfo"},"useAccountInfo"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useAccountInfo")," is used to get the account information."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const accountInfo = useAccountInfo();\n  // ...\n};\n")),(0,o.kt)("p",null,"You can also specify the option to initialize the account."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const accountInfo = useAccountInfo({\n    account_id: 'YOUR_ACCOUNT_ID',\n    currency: 'USD',\n    leverage: 100,\n    initial_balance: 100_000,\n  });\n  // ...\n};\n")),(0,o.kt)("p",null,"You can also create multiple accounts."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const accountInfo1 = useAccountInfo();\n  const accountInfo2 = useAccountInfo({\n    account_id: accountInfo1.account_id + '-Suffix',\n  });\n  // ...\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can call ",(0,o.kt)("inlineCode",{parentName:"li"},"useAccountInfo")," multiple times, and each call will reuse the same account if the account_id is same."),(0,o.kt)("li",{parentName:"ul"},"Every account has independent money, positions and orders. You can maintain multiple accounts in one agent."),(0,o.kt)("li",{parentName:"ul"},"If the account_id is not specified, kernel_id will be treated as the account_id.")),(0,o.kt)("h3",{id:"useexchange"},"useExchange"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useExchange")," is used to execute order operation."),(0,o.kt)("p",null,"For example, you want to open a long position when the agent is started."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const accountInfo = useAccountInfo();\n  const exchange = useExchange();\n  const positionId = useMemo(() => UUID(), []);\n  useEffect(() => {\n    exchange.submitOrder({\n      account_id: accountInfo.account_id,\n      client_order_id: UUID(),\n      product_id: 'XAUUSD',\n      position_id: positionId,\n      type: OrderType.MARKET,\n      direction: OrderDirection.OPEN_LONG,\n      volume: 1,\n    });\n  }, []);\n};\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You must specify the account_id, position_id and client_order_id, otherwise the order may not be executed."),(0,o.kt)("li",{parentName:"ul"},"You can list, submit, cancel and modify orders.")),(0,o.kt)("h2",{id:"custom-parameters"},"Custom Parameters"),(0,o.kt)("p",null,"You can set up custom parameters. So you can change the parameters without changing the code."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"You can extract any string, number or boolean values as parameter."),(0,o.kt)("li",{parentName:"ul"},"Useful when you want to fit multiple products in one agent code."),(0,o.kt)("li",{parentName:"ul"},"Useful when you want to optimize the parameters for different products.")),(0,o.kt)("h3",{id:"useparamstring"},"useParamString"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useParamString")," is used to get the parameter string of the agent."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export default () => {\n  const paramString = useParamString('custom-param-name');\n  // ...\n};\n")),(0,o.kt)("p",null,"You can find the parameter string in the AgentConf form. If not, click the 'refresh' button."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"The first parameter is the name of the parameter."),(0,o.kt)("li",{parentName:"ul"},"The second parameter is the default value of the parameter."),(0,o.kt)("li",{parentName:"ul"},"Parameter hooks with same name will return the same value."),(0,o.kt)("li",{parentName:"ul"},"An error will thrown if the parameter is not provided and no default value.")),(0,o.kt)("h3",{id:"useparamnumber"},"useParamNumber"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useParamNumber")," is used to get the parameter number of the agent."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Similar with ",(0,o.kt)("inlineCode",{parentName:"li"},"useParamString"),", but the return value is a number.")),(0,o.kt)("h3",{id:"useparamboolean"},"useParamBoolean"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"useParamBoolean")," is used to get the parameter boolean of the agent."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Similar with ",(0,o.kt)("inlineCode",{parentName:"li"},"useParamString"),", but the return value is a boolean.")),(0,o.kt)("h2",{id:"custom-hooks"},"Custom Hooks"),(0,o.kt)("p",null,"The very important feature of Hook is that you can compose your own hooks."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Custom hooks obey the all rules of built-in hooks."),(0,o.kt)("li",{parentName:"ul"},"Recommend to use ",(0,o.kt)("inlineCode",{parentName:"li"},"use")," as prefix of the function name. (still works if you don't)"),(0,o.kt)("li",{parentName:"ul"},"Custom hooks can call other hooks."),(0,o.kt)("li",{parentName:"ul"},"Custom hooks might have parameters and return value."),(0,o.kt)("li",{parentName:"ul"},"You can place the custom hooks in another source file and import it.")),(0,o.kt)("p",null,"For example, you want to track the account equity in a series, drawing them into a line chart."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"const useEquitySeries = (account_id: string, clock: Series) => {\n  const series = useSeries('Equity', clock, { display: 'line', chart: 'new' });\n  const accountInfo = useAccountInfo({ account_id });\n  // when clock series increased, push the equity to the series\n  useEffect(() => {\n    series.push(accountInfo.money.equity);\n  }, [clock.length]);\n  return series;\n};\n\nexport default () => {\n  const accountInfo = useAccountInfo();\n  const { close } = useOHLC('Y', 'XAUUSD', 3600);\n  const equitySeries = useEquitySeries(accountInfo.account_id, close);\n  // you can also create series for another account\n  const accountInfo2 = useAccountInfo({ account_id: 'interesting' });\n  const equitySeries = useEquitySeries(accountInfo2.account_id, close);\n  // ... do something\n};\n")),(0,o.kt)("h2",{id:"further-reading"},"Further Reading"),(0,o.kt)("p",null,"You can learn more about Agent Hooks in the following articles:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./using-position-manager"},"Using Position Manager")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"./using-technical-indicators"},"Using Technical Indicators")),(0,o.kt)("li",{parentName:"ul"},"Using Account Transformation (TODO)")),(0,o.kt)("p",null,"You can find out more custom hooks resource in the repo:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/No-Trade-No-Life/Yuan-Public-Workspace"},"Yuan Public Workspace"))))}d.isMDXComponent=!0}}]);